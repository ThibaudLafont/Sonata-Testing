# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    sonata.media.admin.gallery.class: 'Application\Sonata\MediaBundle\Admin\GalleryAdmin'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    admin.category:
        class: AppBundle\Admin\CategoryAdmin
        arguments: [~, AppBundle\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Category }
        public: true

    admin.post:
        class: AppBundle\Admin\PostAdmin
        arguments: [~, AppBundle\Entity\Post, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Post }
        public: true

    custom.media.admin.gallery:
        class: '%sonata.media.admin.gallery.class%'
        arguments:
            - ~
            - Application\Sonata\MediaBundle\Entity\Gallery
            - Application:GalleryAdmin
            - '@sonata.media.pool'
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Galleries}

    sonata.media.provider.custom.image:
        class: Application\Sonata\MediaBundle\Provider\CustomImageProvider
        autowiring: true
        arguments:
            $name: 'sonata.media.provider.custom.image'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $allowedExtensions: ['jpg']
            $allowedMimeTypes: ['image/jpeg']
            $adapter: '@sonata.media.adapter.image.gd'
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_image.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'
